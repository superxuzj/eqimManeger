// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: acs_event.proto

package com.hikvision.cms.api.eps.beds.door;

public final class AcsEvent {
  private AcsEvent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class AccessEventLog extends
      com.google.protobuf.GeneratedMessage {
    // Use AccessEventLog.newBuilder() to construct.
    private AccessEventLog() {
      initFields();
    }
    private AccessEventLog(boolean noInit) {}
    
    private static final AccessEventLog defaultInstance;
    public static AccessEventLog getDefaultInstance() {
      return defaultInstance;
    }
    
    public AccessEventLog getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hikvision.cms.api.eps.beds.door.AcsEvent.internal_static_com_hikvision_cms_api_eps_beds_AccessEventLog_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hikvision.cms.api.eps.beds.door.AcsEvent.internal_static_com_hikvision_cms_api_eps_beds_AccessEventLog_fieldAccessorTable;
    }
    
    // optional int32 event_code = 1;
    public static final int EVENT_CODE_FIELD_NUMBER = 1;
    private boolean hasEventCode;
    private int eventCode_ = 0;
    public boolean hasEventCode() { return hasEventCode; }
    public int getEventCode() { return eventCode_; }
    
    // optional int32 device_id = 2;
    public static final int DEVICE_ID_FIELD_NUMBER = 2;
    private boolean hasDeviceId;
    private int deviceId_ = 0;
    public boolean hasDeviceId() { return hasDeviceId; }
    public int getDeviceId() { return deviceId_; }
    
    // optional int32 device_type = 3;
    public static final int DEVICE_TYPE_FIELD_NUMBER = 3;
    private boolean hasDeviceType;
    private int deviceType_ = 0;
    public boolean hasDeviceType() { return hasDeviceType; }
    public int getDeviceType() { return deviceType_; }
    
    // optional string device_name = 4;
    public static final int DEVICE_NAME_FIELD_NUMBER = 4;
    private boolean hasDeviceName;
    private java.lang.String deviceName_ = "";
    public boolean hasDeviceName() { return hasDeviceName; }
    public java.lang.String getDeviceName() { return deviceName_; }
    
    // optional string event_card = 5;
    public static final int EVENT_CARD_FIELD_NUMBER = 5;
    private boolean hasEventCard;
    private java.lang.String eventCard_ = "";
    public boolean hasEventCard() { return hasEventCard; }
    public java.lang.String getEventCard() { return eventCard_; }
    
    // optional int32 person_id = 6;
    public static final int PERSON_ID_FIELD_NUMBER = 6;
    private boolean hasPersonId;
    private int personId_ = 0;
    public boolean hasPersonId() { return hasPersonId; }
    public int getPersonId() { return personId_; }
    
    // optional string person_name = 7;
    public static final int PERSON_NAME_FIELD_NUMBER = 7;
    private boolean hasPersonName;
    private java.lang.String personName_ = "";
    public boolean hasPersonName() { return hasPersonName; }
    public java.lang.String getPersonName() { return personName_; }
    
    // optional int32 dept_id = 8;
    public static final int DEPT_ID_FIELD_NUMBER = 8;
    private boolean hasDeptId;
    private int deptId_ = 0;
    public boolean hasDeptId() { return hasDeptId; }
    public int getDeptId() { return deptId_; }
    
    // optional string dept_name = 9;
    public static final int DEPT_NAME_FIELD_NUMBER = 9;
    private boolean hasDeptName;
    private java.lang.String deptName_ = "";
    public boolean hasDeptName() { return hasDeptName; }
    public java.lang.String getDeptName() { return deptName_; }
    
    // optional string dept_code = 10;
    public static final int DEPT_CODE_FIELD_NUMBER = 10;
    private boolean hasDeptCode;
    private java.lang.String deptCode_ = "";
    public boolean hasDeptCode() { return hasDeptCode; }
    public java.lang.String getDeptCode() { return deptCode_; }
    
    // optional int32 deviceL1_id = 11;
    public static final int DEVICEL1_ID_FIELD_NUMBER = 11;
    private boolean hasDeviceL1Id;
    private int deviceL1Id_ = 0;
    public boolean hasDeviceL1Id() { return hasDeviceL1Id; }
    public int getDeviceL1Id() { return deviceL1Id_; }
    
    // optional int32 deviceL1_type = 12;
    public static final int DEVICEL1_TYPE_FIELD_NUMBER = 12;
    private boolean hasDeviceL1Type;
    private int deviceL1Type_ = 0;
    public boolean hasDeviceL1Type() { return hasDeviceL1Type; }
    public int getDeviceL1Type() { return deviceL1Type_; }
    
    // optional string deviceL1_name = 13;
    public static final int DEVICEL1_NAME_FIELD_NUMBER = 13;
    private boolean hasDeviceL1Name;
    private java.lang.String deviceL1Name_ = "";
    public boolean hasDeviceL1Name() { return hasDeviceL1Name; }
    public java.lang.String getDeviceL1Name() { return deviceL1Name_; }
    
    // optional int32 deviceL2_id = 14;
    public static final int DEVICEL2_ID_FIELD_NUMBER = 14;
    private boolean hasDeviceL2Id;
    private int deviceL2Id_ = 0;
    public boolean hasDeviceL2Id() { return hasDeviceL2Id; }
    public int getDeviceL2Id() { return deviceL2Id_; }
    
    // optional int32 deviceL2_type = 15;
    public static final int DEVICEL2_TYPE_FIELD_NUMBER = 15;
    private boolean hasDeviceL2Type;
    private int deviceL2Type_ = 0;
    public boolean hasDeviceL2Type() { return hasDeviceL2Type; }
    public int getDeviceL2Type() { return deviceL2Type_; }
    
    // optional string deviceL2_name = 16;
    public static final int DEVICEL2_NAME_FIELD_NUMBER = 16;
    private boolean hasDeviceL2Name;
    private java.lang.String deviceL2Name_ = "";
    public boolean hasDeviceL2Name() { return hasDeviceL2Name; }
    public java.lang.String getDeviceL2Name() { return deviceL2Name_; }
    
    // optional int32 deviceL3_id = 17;
    public static final int DEVICEL3_ID_FIELD_NUMBER = 17;
    private boolean hasDeviceL3Id;
    private int deviceL3Id_ = 0;
    public boolean hasDeviceL3Id() { return hasDeviceL3Id; }
    public int getDeviceL3Id() { return deviceL3Id_; }
    
    // optional int32 deviceL3_type = 18;
    public static final int DEVICEL3_TYPE_FIELD_NUMBER = 18;
    private boolean hasDeviceL3Type;
    private int deviceL3Type_ = 0;
    public boolean hasDeviceL3Type() { return hasDeviceL3Type; }
    public int getDeviceL3Type() { return deviceL3Type_; }
    
    // optional string deviceL3_name = 19;
    public static final int DEVICEL3_NAME_FIELD_NUMBER = 19;
    private boolean hasDeviceL3Name;
    private java.lang.String deviceL3Name_ = "";
    public boolean hasDeviceL3Name() { return hasDeviceL3Name; }
    public java.lang.String getDeviceL3Name() { return deviceL3Name_; }
    
    // optional int32 in_out = 20;
    public static final int IN_OUT_FIELD_NUMBER = 20;
    private boolean hasInOut;
    private int inOut_ = 0;
    public boolean hasInOut() { return hasInOut; }
    public int getInOut() { return inOut_; }
    
    // optional string ext_txt = 21;
    public static final int EXT_TXT_FIELD_NUMBER = 21;
    private boolean hasExtTxt;
    private java.lang.String extTxt_ = "";
    public boolean hasExtTxt() { return hasExtTxt; }
    public java.lang.String getExtTxt() { return extTxt_; }
    
    // optional int32 door_id = 33;
    public static final int DOOR_ID_FIELD_NUMBER = 33;
    private boolean hasDoorId;
    private int doorId_ = 0;
    public boolean hasDoorId() { return hasDoorId; }
    public int getDoorId() { return doorId_; }
    
    // optional int32 card_status = 34;
    public static final int CARD_STATUS_FIELD_NUMBER = 34;
    private boolean hasCardStatus;
    private int cardStatus_ = 0;
    public boolean hasCardStatus() { return hasCardStatus; }
    public int getCardStatus() { return cardStatus_; }
    
    // optional string pic_url = 35;
    public static final int PIC_URL_FIELD_NUMBER = 35;
    private boolean hasPicUrl;
    private java.lang.String picUrl_ = "";
    public boolean hasPicUrl() { return hasPicUrl; }
    public java.lang.String getPicUrl() { return picUrl_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEventCode()) {
        output.writeInt32(1, getEventCode());
      }
      if (hasDeviceId()) {
        output.writeInt32(2, getDeviceId());
      }
      if (hasDeviceType()) {
        output.writeInt32(3, getDeviceType());
      }
      if (hasDeviceName()) {
        output.writeString(4, getDeviceName());
      }
      if (hasEventCard()) {
        output.writeString(5, getEventCard());
      }
      if (hasPersonId()) {
        output.writeInt32(6, getPersonId());
      }
      if (hasPersonName()) {
        output.writeString(7, getPersonName());
      }
      if (hasDeptId()) {
        output.writeInt32(8, getDeptId());
      }
      if (hasDeptName()) {
        output.writeString(9, getDeptName());
      }
      if (hasDeptCode()) {
        output.writeString(10, getDeptCode());
      }
      if (hasDeviceL1Id()) {
        output.writeInt32(11, getDeviceL1Id());
      }
      if (hasDeviceL1Type()) {
        output.writeInt32(12, getDeviceL1Type());
      }
      if (hasDeviceL1Name()) {
        output.writeString(13, getDeviceL1Name());
      }
      if (hasDeviceL2Id()) {
        output.writeInt32(14, getDeviceL2Id());
      }
      if (hasDeviceL2Type()) {
        output.writeInt32(15, getDeviceL2Type());
      }
      if (hasDeviceL2Name()) {
        output.writeString(16, getDeviceL2Name());
      }
      if (hasDeviceL3Id()) {
        output.writeInt32(17, getDeviceL3Id());
      }
      if (hasDeviceL3Type()) {
        output.writeInt32(18, getDeviceL3Type());
      }
      if (hasDeviceL3Name()) {
        output.writeString(19, getDeviceL3Name());
      }
      if (hasInOut()) {
        output.writeInt32(20, getInOut());
      }
      if (hasExtTxt()) {
        output.writeString(21, getExtTxt());
      }
      if (hasDoorId()) {
        output.writeInt32(33, getDoorId());
      }
      if (hasCardStatus()) {
        output.writeInt32(34, getCardStatus());
      }
      if (hasPicUrl()) {
        output.writeString(35, getPicUrl());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEventCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getEventCode());
      }
      if (hasDeviceId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getDeviceId());
      }
      if (hasDeviceType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getDeviceType());
      }
      if (hasDeviceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getDeviceName());
      }
      if (hasEventCard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getEventCard());
      }
      if (hasPersonId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getPersonId());
      }
      if (hasPersonName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getPersonName());
      }
      if (hasDeptId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getDeptId());
      }
      if (hasDeptName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getDeptName());
      }
      if (hasDeptCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getDeptCode());
      }
      if (hasDeviceL1Id()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, getDeviceL1Id());
      }
      if (hasDeviceL1Type()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, getDeviceL1Type());
      }
      if (hasDeviceL1Name()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(13, getDeviceL1Name());
      }
      if (hasDeviceL2Id()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, getDeviceL2Id());
      }
      if (hasDeviceL2Type()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, getDeviceL2Type());
      }
      if (hasDeviceL2Name()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(16, getDeviceL2Name());
      }
      if (hasDeviceL3Id()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, getDeviceL3Id());
      }
      if (hasDeviceL3Type()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, getDeviceL3Type());
      }
      if (hasDeviceL3Name()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(19, getDeviceL3Name());
      }
      if (hasInOut()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, getInOut());
      }
      if (hasExtTxt()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(21, getExtTxt());
      }
      if (hasDoorId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, getDoorId());
      }
      if (hasCardStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, getCardStatus());
      }
      if (hasPicUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(35, getPicUrl());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog result;
      
      // Construct using com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog();
        return builder;
      }
      
      protected com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog.getDescriptor();
      }
      
      public com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog getDefaultInstanceForType() {
        return com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog) {
          return mergeFrom((com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog other) {
        if (other == com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog.getDefaultInstance()) return this;
        if (other.hasEventCode()) {
          setEventCode(other.getEventCode());
        }
        if (other.hasDeviceId()) {
          setDeviceId(other.getDeviceId());
        }
        if (other.hasDeviceType()) {
          setDeviceType(other.getDeviceType());
        }
        if (other.hasDeviceName()) {
          setDeviceName(other.getDeviceName());
        }
        if (other.hasEventCard()) {
          setEventCard(other.getEventCard());
        }
        if (other.hasPersonId()) {
          setPersonId(other.getPersonId());
        }
        if (other.hasPersonName()) {
          setPersonName(other.getPersonName());
        }
        if (other.hasDeptId()) {
          setDeptId(other.getDeptId());
        }
        if (other.hasDeptName()) {
          setDeptName(other.getDeptName());
        }
        if (other.hasDeptCode()) {
          setDeptCode(other.getDeptCode());
        }
        if (other.hasDeviceL1Id()) {
          setDeviceL1Id(other.getDeviceL1Id());
        }
        if (other.hasDeviceL1Type()) {
          setDeviceL1Type(other.getDeviceL1Type());
        }
        if (other.hasDeviceL1Name()) {
          setDeviceL1Name(other.getDeviceL1Name());
        }
        if (other.hasDeviceL2Id()) {
          setDeviceL2Id(other.getDeviceL2Id());
        }
        if (other.hasDeviceL2Type()) {
          setDeviceL2Type(other.getDeviceL2Type());
        }
        if (other.hasDeviceL2Name()) {
          setDeviceL2Name(other.getDeviceL2Name());
        }
        if (other.hasDeviceL3Id()) {
          setDeviceL3Id(other.getDeviceL3Id());
        }
        if (other.hasDeviceL3Type()) {
          setDeviceL3Type(other.getDeviceL3Type());
        }
        if (other.hasDeviceL3Name()) {
          setDeviceL3Name(other.getDeviceL3Name());
        }
        if (other.hasInOut()) {
          setInOut(other.getInOut());
        }
        if (other.hasExtTxt()) {
          setExtTxt(other.getExtTxt());
        }
        if (other.hasDoorId()) {
          setDoorId(other.getDoorId());
        }
        if (other.hasCardStatus()) {
          setCardStatus(other.getCardStatus());
        }
        if (other.hasPicUrl()) {
          setPicUrl(other.getPicUrl());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setEventCode(input.readInt32());
              break;
            }
            case 16: {
              setDeviceId(input.readInt32());
              break;
            }
            case 24: {
              setDeviceType(input.readInt32());
              break;
            }
            case 34: {
              setDeviceName(input.readString());
              break;
            }
            case 42: {
              setEventCard(input.readString());
              break;
            }
            case 48: {
              setPersonId(input.readInt32());
              break;
            }
            case 58: {
              setPersonName(input.readString());
              break;
            }
            case 64: {
              setDeptId(input.readInt32());
              break;
            }
            case 74: {
              setDeptName(input.readString());
              break;
            }
            case 82: {
              setDeptCode(input.readString());
              break;
            }
            case 88: {
              setDeviceL1Id(input.readInt32());
              break;
            }
            case 96: {
              setDeviceL1Type(input.readInt32());
              break;
            }
            case 106: {
              setDeviceL1Name(input.readString());
              break;
            }
            case 112: {
              setDeviceL2Id(input.readInt32());
              break;
            }
            case 120: {
              setDeviceL2Type(input.readInt32());
              break;
            }
            case 130: {
              setDeviceL2Name(input.readString());
              break;
            }
            case 136: {
              setDeviceL3Id(input.readInt32());
              break;
            }
            case 144: {
              setDeviceL3Type(input.readInt32());
              break;
            }
            case 154: {
              setDeviceL3Name(input.readString());
              break;
            }
            case 160: {
              setInOut(input.readInt32());
              break;
            }
            case 170: {
              setExtTxt(input.readString());
              break;
            }
            case 264: {
              setDoorId(input.readInt32());
              break;
            }
            case 272: {
              setCardStatus(input.readInt32());
              break;
            }
            case 282: {
              setPicUrl(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional int32 event_code = 1;
      public boolean hasEventCode() {
        return result.hasEventCode();
      }
      public int getEventCode() {
        return result.getEventCode();
      }
      public Builder setEventCode(int value) {
        result.hasEventCode = true;
        result.eventCode_ = value;
        return this;
      }
      public Builder clearEventCode() {
        result.hasEventCode = false;
        result.eventCode_ = 0;
        return this;
      }
      
      // optional int32 device_id = 2;
      public boolean hasDeviceId() {
        return result.hasDeviceId();
      }
      public int getDeviceId() {
        return result.getDeviceId();
      }
      public Builder setDeviceId(int value) {
        result.hasDeviceId = true;
        result.deviceId_ = value;
        return this;
      }
      public Builder clearDeviceId() {
        result.hasDeviceId = false;
        result.deviceId_ = 0;
        return this;
      }
      
      // optional int32 device_type = 3;
      public boolean hasDeviceType() {
        return result.hasDeviceType();
      }
      public int getDeviceType() {
        return result.getDeviceType();
      }
      public Builder setDeviceType(int value) {
        result.hasDeviceType = true;
        result.deviceType_ = value;
        return this;
      }
      public Builder clearDeviceType() {
        result.hasDeviceType = false;
        result.deviceType_ = 0;
        return this;
      }
      
      // optional string device_name = 4;
      public boolean hasDeviceName() {
        return result.hasDeviceName();
      }
      public java.lang.String getDeviceName() {
        return result.getDeviceName();
      }
      public Builder setDeviceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDeviceName = true;
        result.deviceName_ = value;
        return this;
      }
      public Builder clearDeviceName() {
        result.hasDeviceName = false;
        result.deviceName_ = getDefaultInstance().getDeviceName();
        return this;
      }
      
      // optional string event_card = 5;
      public boolean hasEventCard() {
        return result.hasEventCard();
      }
      public java.lang.String getEventCard() {
        return result.getEventCard();
      }
      public Builder setEventCard(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEventCard = true;
        result.eventCard_ = value;
        return this;
      }
      public Builder clearEventCard() {
        result.hasEventCard = false;
        result.eventCard_ = getDefaultInstance().getEventCard();
        return this;
      }
      
      // optional int32 person_id = 6;
      public boolean hasPersonId() {
        return result.hasPersonId();
      }
      public int getPersonId() {
        return result.getPersonId();
      }
      public Builder setPersonId(int value) {
        result.hasPersonId = true;
        result.personId_ = value;
        return this;
      }
      public Builder clearPersonId() {
        result.hasPersonId = false;
        result.personId_ = 0;
        return this;
      }
      
      // optional string person_name = 7;
      public boolean hasPersonName() {
        return result.hasPersonName();
      }
      public java.lang.String getPersonName() {
        return result.getPersonName();
      }
      public Builder setPersonName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPersonName = true;
        result.personName_ = value;
        return this;
      }
      public Builder clearPersonName() {
        result.hasPersonName = false;
        result.personName_ = getDefaultInstance().getPersonName();
        return this;
      }
      
      // optional int32 dept_id = 8;
      public boolean hasDeptId() {
        return result.hasDeptId();
      }
      public int getDeptId() {
        return result.getDeptId();
      }
      public Builder setDeptId(int value) {
        result.hasDeptId = true;
        result.deptId_ = value;
        return this;
      }
      public Builder clearDeptId() {
        result.hasDeptId = false;
        result.deptId_ = 0;
        return this;
      }
      
      // optional string dept_name = 9;
      public boolean hasDeptName() {
        return result.hasDeptName();
      }
      public java.lang.String getDeptName() {
        return result.getDeptName();
      }
      public Builder setDeptName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDeptName = true;
        result.deptName_ = value;
        return this;
      }
      public Builder clearDeptName() {
        result.hasDeptName = false;
        result.deptName_ = getDefaultInstance().getDeptName();
        return this;
      }
      
      // optional string dept_code = 10;
      public boolean hasDeptCode() {
        return result.hasDeptCode();
      }
      public java.lang.String getDeptCode() {
        return result.getDeptCode();
      }
      public Builder setDeptCode(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDeptCode = true;
        result.deptCode_ = value;
        return this;
      }
      public Builder clearDeptCode() {
        result.hasDeptCode = false;
        result.deptCode_ = getDefaultInstance().getDeptCode();
        return this;
      }
      
      // optional int32 deviceL1_id = 11;
      public boolean hasDeviceL1Id() {
        return result.hasDeviceL1Id();
      }
      public int getDeviceL1Id() {
        return result.getDeviceL1Id();
      }
      public Builder setDeviceL1Id(int value) {
        result.hasDeviceL1Id = true;
        result.deviceL1Id_ = value;
        return this;
      }
      public Builder clearDeviceL1Id() {
        result.hasDeviceL1Id = false;
        result.deviceL1Id_ = 0;
        return this;
      }
      
      // optional int32 deviceL1_type = 12;
      public boolean hasDeviceL1Type() {
        return result.hasDeviceL1Type();
      }
      public int getDeviceL1Type() {
        return result.getDeviceL1Type();
      }
      public Builder setDeviceL1Type(int value) {
        result.hasDeviceL1Type = true;
        result.deviceL1Type_ = value;
        return this;
      }
      public Builder clearDeviceL1Type() {
        result.hasDeviceL1Type = false;
        result.deviceL1Type_ = 0;
        return this;
      }
      
      // optional string deviceL1_name = 13;
      public boolean hasDeviceL1Name() {
        return result.hasDeviceL1Name();
      }
      public java.lang.String getDeviceL1Name() {
        return result.getDeviceL1Name();
      }
      public Builder setDeviceL1Name(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDeviceL1Name = true;
        result.deviceL1Name_ = value;
        return this;
      }
      public Builder clearDeviceL1Name() {
        result.hasDeviceL1Name = false;
        result.deviceL1Name_ = getDefaultInstance().getDeviceL1Name();
        return this;
      }
      
      // optional int32 deviceL2_id = 14;
      public boolean hasDeviceL2Id() {
        return result.hasDeviceL2Id();
      }
      public int getDeviceL2Id() {
        return result.getDeviceL2Id();
      }
      public Builder setDeviceL2Id(int value) {
        result.hasDeviceL2Id = true;
        result.deviceL2Id_ = value;
        return this;
      }
      public Builder clearDeviceL2Id() {
        result.hasDeviceL2Id = false;
        result.deviceL2Id_ = 0;
        return this;
      }
      
      // optional int32 deviceL2_type = 15;
      public boolean hasDeviceL2Type() {
        return result.hasDeviceL2Type();
      }
      public int getDeviceL2Type() {
        return result.getDeviceL2Type();
      }
      public Builder setDeviceL2Type(int value) {
        result.hasDeviceL2Type = true;
        result.deviceL2Type_ = value;
        return this;
      }
      public Builder clearDeviceL2Type() {
        result.hasDeviceL2Type = false;
        result.deviceL2Type_ = 0;
        return this;
      }
      
      // optional string deviceL2_name = 16;
      public boolean hasDeviceL2Name() {
        return result.hasDeviceL2Name();
      }
      public java.lang.String getDeviceL2Name() {
        return result.getDeviceL2Name();
      }
      public Builder setDeviceL2Name(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDeviceL2Name = true;
        result.deviceL2Name_ = value;
        return this;
      }
      public Builder clearDeviceL2Name() {
        result.hasDeviceL2Name = false;
        result.deviceL2Name_ = getDefaultInstance().getDeviceL2Name();
        return this;
      }
      
      // optional int32 deviceL3_id = 17;
      public boolean hasDeviceL3Id() {
        return result.hasDeviceL3Id();
      }
      public int getDeviceL3Id() {
        return result.getDeviceL3Id();
      }
      public Builder setDeviceL3Id(int value) {
        result.hasDeviceL3Id = true;
        result.deviceL3Id_ = value;
        return this;
      }
      public Builder clearDeviceL3Id() {
        result.hasDeviceL3Id = false;
        result.deviceL3Id_ = 0;
        return this;
      }
      
      // optional int32 deviceL3_type = 18;
      public boolean hasDeviceL3Type() {
        return result.hasDeviceL3Type();
      }
      public int getDeviceL3Type() {
        return result.getDeviceL3Type();
      }
      public Builder setDeviceL3Type(int value) {
        result.hasDeviceL3Type = true;
        result.deviceL3Type_ = value;
        return this;
      }
      public Builder clearDeviceL3Type() {
        result.hasDeviceL3Type = false;
        result.deviceL3Type_ = 0;
        return this;
      }
      
      // optional string deviceL3_name = 19;
      public boolean hasDeviceL3Name() {
        return result.hasDeviceL3Name();
      }
      public java.lang.String getDeviceL3Name() {
        return result.getDeviceL3Name();
      }
      public Builder setDeviceL3Name(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDeviceL3Name = true;
        result.deviceL3Name_ = value;
        return this;
      }
      public Builder clearDeviceL3Name() {
        result.hasDeviceL3Name = false;
        result.deviceL3Name_ = getDefaultInstance().getDeviceL3Name();
        return this;
      }
      
      // optional int32 in_out = 20;
      public boolean hasInOut() {
        return result.hasInOut();
      }
      public int getInOut() {
        return result.getInOut();
      }
      public Builder setInOut(int value) {
        result.hasInOut = true;
        result.inOut_ = value;
        return this;
      }
      public Builder clearInOut() {
        result.hasInOut = false;
        result.inOut_ = 0;
        return this;
      }
      
      // optional string ext_txt = 21;
      public boolean hasExtTxt() {
        return result.hasExtTxt();
      }
      public java.lang.String getExtTxt() {
        return result.getExtTxt();
      }
      public Builder setExtTxt(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasExtTxt = true;
        result.extTxt_ = value;
        return this;
      }
      public Builder clearExtTxt() {
        result.hasExtTxt = false;
        result.extTxt_ = getDefaultInstance().getExtTxt();
        return this;
      }
      
      // optional int32 door_id = 33;
      public boolean hasDoorId() {
        return result.hasDoorId();
      }
      public int getDoorId() {
        return result.getDoorId();
      }
      public Builder setDoorId(int value) {
        result.hasDoorId = true;
        result.doorId_ = value;
        return this;
      }
      public Builder clearDoorId() {
        result.hasDoorId = false;
        result.doorId_ = 0;
        return this;
      }
      
      // optional int32 card_status = 34;
      public boolean hasCardStatus() {
        return result.hasCardStatus();
      }
      public int getCardStatus() {
        return result.getCardStatus();
      }
      public Builder setCardStatus(int value) {
        result.hasCardStatus = true;
        result.cardStatus_ = value;
        return this;
      }
      public Builder clearCardStatus() {
        result.hasCardStatus = false;
        result.cardStatus_ = 0;
        return this;
      }
      
      // optional string pic_url = 35;
      public boolean hasPicUrl() {
        return result.hasPicUrl();
      }
      public java.lang.String getPicUrl() {
        return result.getPicUrl();
      }
      public Builder setPicUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPicUrl = true;
        result.picUrl_ = value;
        return this;
      }
      public Builder clearPicUrl() {
        result.hasPicUrl = false;
        result.picUrl_ = getDefaultInstance().getPicUrl();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.hikvision.cms.api.eps.beds.door.AccessEventLog)
    }
    
    static {
      defaultInstance = new AccessEventLog(true);
      com.hikvision.cms.api.eps.beds.door.AcsEvent.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.hikvision.cms.api.eps.beds.door.AccessEventLog)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hikvision_cms_api_eps_beds_AccessEventLog_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_hikvision_cms_api_eps_beds_AccessEventLog_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017acs_event.proto\022\036com.hikvision.cms.api" +
      ".eps.beds\032\ncomm.proto\"\365\003\n\016AccessEventLog" +
      "\022\022\n\nevent_code\030\001 \001(\005\022\021\n\tdevice_id\030\002 \001(\005\022" +
      "\023\n\013device_type\030\003 \001(\005\022\023\n\013device_name\030\004 \001(" +
      "\t\022\022\n\nevent_card\030\005 \001(\t\022\021\n\tperson_id\030\006 \001(\005" +
      "\022\023\n\013person_name\030\007 \001(\t\022\017\n\007dept_id\030\010 \001(\005\022\021" +
      "\n\tdept_name\030\t \001(\t\022\021\n\tdept_code\030\n \001(\t\022\023\n\013" +
      "deviceL1_id\030\013 \001(\005\022\025\n\rdeviceL1_type\030\014 \001(\005" +
      "\022\025\n\rdeviceL1_name\030\r \001(\t\022\023\n\013deviceL2_id\030\016" +
      " \001(\005\022\025\n\rdeviceL2_type\030\017 \001(\005\022\025\n\rdeviceL2_",
      "name\030\020 \001(\t\022\023\n\013deviceL3_id\030\021 \001(\005\022\025\n\rdevic" +
      "eL3_type\030\022 \001(\005\022\025\n\rdeviceL3_name\030\023 \001(\t\022\016\n" +
      "\006in_out\030\024 \001(\005\022\017\n\007ext_txt\030\025 \001(\t\022\017\n\007door_i" +
      "d\030! \001(\005\022\023\n\013card_status\030\" \001(\005\022\017\n\007pic_url\030" +
      "# \001(\t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_hikvision_cms_api_eps_beds_AccessEventLog_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_hikvision_cms_api_eps_beds_AccessEventLog_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_hikvision_cms_api_eps_beds_AccessEventLog_descriptor,
              new java.lang.String[] { "EventCode", "DeviceId", "DeviceType", "DeviceName", "EventCard", "PersonId", "PersonName", "DeptId", "DeptName", "DeptCode", "DeviceL1Id", "DeviceL1Type", "DeviceL1Name", "DeviceL2Id", "DeviceL2Type", "DeviceL2Name", "DeviceL3Id", "DeviceL3Type", "DeviceL3Name", "InOut", "ExtTxt", "DoorId", "CardStatus", "PicUrl", },
              com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog.class,
              com.hikvision.cms.api.eps.beds.door.AcsEvent.AccessEventLog.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.hikvision.cms.api.eps.beds.door.Comm.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
